:root {
  --background: #1b1e2e;
  --dark-background: #171926;
  --light-element: #5a5f7a;
  --ligther-element: #f3f4fa;
  --boder-color: #2e3247;
  --selected-item-background: #2e3247;
  --highlight: #9aa2fc;
}

main, .bg-white {
  background-color: var(--background) !important;
}

.bg-gray-50 {
  background-color: var(--dark-background) !important;
}

.text-gray-300, .text-gray-400, .text-gray-500, .text-gray-600, .text-gray-700, .text-gray-800, .text-gray-900 {
  color: var(--light-element) !important;
}

.icon-dark-gray-600 > *[fill].icon-dark,
.icon-light-gray-50 > *[fill][stroke].icon-light-fill,
.icon-dark-gray-200 > *[fill][stroke].icon-dark-stroke {
  fill: var(--light-element) !important;
  stroke: var(--light-element) !important;
}

.icon-dark-white > *[fill].icon-dark, *[fill].icon-dark-gray-500, .icon-light-gray-50 > *[fill].icon-light {
  fill: var(--dark-background) !important;
}

.icon-light-gray-400 > *[stroke].icon-light {
  stroke: var(--light-element) !important;
}

.border, .border-gray-50, .border-gray-100, .border-b-gray-100, .border-t-gray-100 {
  border-color: var(--boder-color) !important;
}

[data-cy="sidebar"] {
  border-right-width: 1px;
  border-color: var(--boder-color);
}

[data-cy="header-bar-content"] {
  color: var(--ligther-element);
}

[data-cy="spec-list-file"] {
  border-color: var(--boder-color) !important;
}

[id="spec-filter"] {
  background-color: var(--background);
}

/* Iframe background */
.h-0 {
  background-color: var(--dark-background);
  height: 10000px !important;
}

/* Selected item */
.hover\:bg-indigo-50:hover {
  background-color: var(--selected-item-background) !important;
}

.border-b-gray-50 {
  border-bottom-color: var(--boder-color) !important;
}

.text-indigo-500 {
  color: var(--highlight) !important;
}

/* Settings expanded container*/
[data-cy="config-code"], [data-cy="config-legend"] {
  background-color: var(--dark-background);
  border-color: var(--boder-color);
}

.bg-light-50 {
  background-color: var(--background) !important;
}

.divide-gray-100 > :not([hidden]) ~ :not([hidden]) {
  border-color: var(--boder-color) !important;
}

.icon-light-fill {
  fill: var(--light-element) !important;
}

.text-jade-500 {
  color: rgb(16, 196, 94) !important;
}

.icon-light-jade-500 > *[fill][stroke].icon-light-fill,
.icon-dark-jade-500 > *[fill][stroke].icon-dark-stroke {
  fill: rgb(16, 196, 94) !important;
  stroke: rgb(16, 196, 94) !important;
}